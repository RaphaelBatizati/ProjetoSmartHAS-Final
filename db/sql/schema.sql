
-- schema.sql: Smart HAS core tables (Oracle)
-- Run order: schema.sql -> seed.sql -> functions.sql -> procedures.sql

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';

-- USERS
CREATE TABLE APP_USER (
  USER_ID       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  NAME          VARCHAR2(100) NOT NULL,
  EMAIL         VARCHAR2(150) UNIQUE NOT NULL,
  CREATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- DEVICES/SENSORS
CREATE TABLE SENSOR (
  SENSOR_ID     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  USER_ID       NUMBER NOT NULL,
  NAME          VARCHAR2(100) NOT NULL,
  TYPE          VARCHAR2(50)  NOT NULL, -- e.g., POWER, TEMP, HUMIDITY
  LOCATION      VARCHAR2(120),
  CREATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_SENSOR_USER FOREIGN KEY (USER_ID) REFERENCES APP_USER(USER_ID)
);

-- SENSOR READINGS
CREATE TABLE SENSOR_READING (
  READING_ID    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  SENSOR_ID     NUMBER NOT NULL,
  READING_TS    TIMESTAMP DEFAULT SYSTIMESTAMP,
  POWER_W       NUMBER(12,3),
  TEMP_C        NUMBER(6,2),
  HUMIDITY_PCT  NUMBER(5,2),
  CONSTRAINT FK_READING_SENSOR FOREIGN KEY (SENSOR_ID) REFERENCES SENSOR(SENSOR_ID)
);

-- ALERTS
CREATE TABLE ALERT (
  ALERT_ID      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  SENSOR_ID     NUMBER NOT NULL,
  ALERT_TS      TIMESTAMP DEFAULT SYSTIMESTAMP,
  LEVEL         VARCHAR2(20) NOT NULL, -- INFO/WARN/CRITICAL
  MESSAGE       VARCHAR2(400),
  META_JSON     CLOB,
  CONSTRAINT FK_ALERT_SENSOR FOREIGN KEY (SENSOR_ID) REFERENCES SENSOR(SENSOR_ID)
);

-- MATERIALIZED VIEW-LIKE summary table (can be filled by procedure)
CREATE TABLE CONSUMPTION_SUMMARY (
  SUMMARY_ID    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  USER_ID       NUMBER NOT NULL,
  FROM_TS       TIMESTAMP NOT NULL,
  TO_TS         TIMESTAMP NOT NULL,
  TOTAL_KWH     NUMBER(18,6),
  AVG_POWER_W   NUMBER(18,6),
  CREATED_AT    TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_SUMMARY_USER FOREIGN KEY (USER_ID) REFERENCES APP_USER(USER_ID)
);

CREATE INDEX IDX_READING_SENSOR_TS ON SENSOR_READING(SENSOR_ID, READING_TS);
CREATE INDEX IDX_ALERT_SENSOR_TS   ON ALERT(SENSOR_ID, ALERT_TS);
